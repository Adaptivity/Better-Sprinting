1. Update code
   - Search the repository for: // UPDATE
   - When mixed, custom code is marked // CUSTOM, vanilla code is marked // VANILLA
   - In methods that are inserted into vanilla code by the coremod, make sure code around insertion point hasn't changed, otherwise update coremod
   - Make sure all instances of vanilla code match the updated code, and check custom code for subtle changes
   - Once done, update the Minecraft version in the comment

2. Update version numbers
   - mcmod.info > version  -  mod version
   - BetterSprintingMod.buildId  -  unique build string for each release
   - BetterSprintingCore.supportedMinecraftVersion  -  Minecraft version

3. Make sure the mod is working
   - Test coremod
     - Make sure the coremod doesn't fail integrity check on startup
     - Debug EntityPlayerSP.onLivingUpdate to make sure the control flow is still fine
       - 1. Put a breakpoint on the first line:
            > ++this.sprintingTicksLeft;
       - 2. Step over until this point:
            > float f = 0.8F;
       - 3. Now step into it, and you should jump into the first line of LivingUpdate.callPreSuper
       - 4. Step return, step over, and you should jump back to EntityPlayerSP on this line:
            > if (this.isRidingHorse())
       - 5. If any of these steps fail, things are bork
   - Test both SP and MP
     - Make sure all control options work
     - Test server-side commands with different locales
     - Join a BSM server with vanilla client
     - Join a vanilla server with BSM client

4. Update version data
   - UpdateInfo.json
   - UpdateNotificationData.txt
